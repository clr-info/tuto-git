Git initiation 1

Git - Installation - Configuration - Initialisation
2016

LPC

* Système de gestion de versions décentralisée

- enregistre l'évolution d'un fichier ou d'un ensemble de fichiers au cours du temps de manière à pouvoir revenir à une version antérieure
- travail collaboratif : qui a fait quoi, quand ?
- décentralisé : chacun possède son dépôt local. Il peut y avoir un dépôt central.

.image gfx/initiation-config-sgv.png

* Installation

* Installation - Windows
- TBD
- cmder
- git Windows

* Installation - *nix
- TBD

* Installation
- version
    $ git --version

- help
    $ git help [COMMAND]
    $ git help add
    $ git help status

* Configuration

* Configuration
- git config
    # les options name et email doivent être renseignees 
    # ce sont elles qui identifieront qui a fait quoi et comment le contacter 
    $ git config --global user.name "John Smith"
    $ git config --global user.email john@example.com
    $ git config --global core.editor vim
    $ git config --global alias.st status
    
    # affiche toutes les options
    $ git config --list

- le flag `--global` enregistre les options dans le fichier `~/.gitconfig` : valeur par défaut pour tous les nouveaux repository
- sinon les options locales du repository se trouvent dans `<repo>/.git/config`

* Initialisation

* Initialisation d'un dépôt Git: init

    $ git init <path>
- Création d'un *dépôt* *git* dans le répertoire `<path>`
- Existence d'un dossier *.git* dans le répertoire `<path>` qui contient également les fichiers source du workspace
    $ git init --bare <path>
- Création d'un *dépôt* *Git* *central*, *partagé*, *"serveur"* dans le répertoire <path>
- Le repository serveur ne contient que le dossier `.git` pas les fichiers source du workspace
- Par convention les repositories serveur prennent l'extension `.git` : *repo.git*

* Initialisation d'un dépôt Git: clone

    # clone le repository <repo-path> dans le répertoire <name-directory> en local
    $ git clone <repo-path> <name-directory>

    # récupération d'un dépôt distant via ssh ou https
    $ git clone ssh://<user>@<host>/path/to/repo.git
    $ git clone https://otherhost.com/user/repo.git

* Tout ne doit pas être versionné
- Fichier *.gitignore*
    $ git ignore --help

- Permet de ne pas surveiller certains fichiers, dossiers
- À la racine du dépôt (portée du dossier conteneur)

    # Exemple .gitignore
    # ignorer tous les fichiers ayant l’extension pyo ou pyc
    *.py[oc]
    # tous les fichiers et dossiers du dossier ./vendor dans le dépôt
    /vendor/*
    # les fichiers commençant par ~
    ~*

- Attention aux fichiers *sensibles* (*conf*), inutiles (exécutables...), de tailles importante (documentation, vidéo...)
- Pour les fichiers de conf (ou autres), il est d'usage de laisser un .dist non renseigné
